name: deploy-pipeline
run-name: ${{ github.repository }} deploy pipeline
on:
  schedule:
    - cron: "30 13 * * *" #***THIS WILL DELETE YOUR CLUSTER AT 11:30 PM NZT***
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment to deploy
        options:
          - dev
        default: dev
      destroy:
        type: boolean
        description: Destroy Terraform
        default: false
jobs:
  deploy:
    name: "Deploy ${{ github.event.inputs.environment }}"
    env:
      REPO_NAME: ${{ github.event.repository.name }}
      ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
      ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
      ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set the variables
        env:
          DEFAULT_ENV: "dev"
        run: |
          echo "ENVIRONMENT=${{ github.event.inputs.environment || env.DEFAULT_ENV }}" >> $GITHUB_ENV
          echo "IS_SCHEDULED=${{ github.event_name == 'schedule' }}" >> $GITHUB_ENV

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: '{"clientId": "${{ env.ARM_CLIENT_ID}}", "clientSecret":"${{env.ARM_CLIENT_SECRET}}", "tenantId": "${{ env.ARM_TENANT_ID}}","subscriptionId": "${{ env.ARM_SUBSCRIPTION_ID}}"}'

      - name: Get Backend Storage Key
        run: export ARM_ACCESS_KEY=$(az storage account keys list --resource-group backstage-terraform --account-name iwterraformstate --query '[0].value' -o tsv)

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ./push-based/notification
        run: |
          terraform init -backend-config="key=${{ env.REPO_NAME }}-${{ env.ENVIRONMENT }}.tfstate"

      - name: Terraform Validate
        working-directory: ./push-based/notification
        run: |
          terraform validate

      - name: Terraform Plan
        if: github.event.inputs.destroy == 'false'
        working-directory: ./push-based/notification
        id: plan
        run: |
          terraform plan -var-file="./tfvars/${{ github.event.inputs.environment }}-vars.tfvars" -out main.tfplan

      - name: Apply
        if: github.event.inputs.destroy == 'false'
        working-directory: ./push-based/notification
        run: |
          terraform apply "main.tfplan"

      - name: Terraform Destroy
        if: github.event.inputs.destroy == 'true' || env.IS_SCHEDULED == 'true'
        run: |
          terraform destroy -auto-approve -var-file="tfvars/${{ env.ENVIRONMENT }}-vars.tfvars"
